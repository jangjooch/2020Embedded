
0706_SuperSoinc03_BunJu.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000006fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000688  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  000006fc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000072c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a83  00000000  00000000  0000079c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ba  00000000  00000000  0000121f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000410  00000000  00000000  00001ad9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000058  00000000  00000000  00001eec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a7  00000000  00000000  00001f44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000184  00000000  00000000  000023eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  0000256f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	40 c0       	rjmp	.+128    	; 0xae <__vector_11>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a5 30       	cpi	r26, 0x05	; 5
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	2f d0       	rcall	.+94     	; 0x108 <main>
  aa:	ec c2       	rjmp	.+1496   	; 0x684 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <__vector_11>:
		}
		
    }
}

ISR(TIMER1_CAPT_vect){
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	8f 93       	push	r24
  ba:	9f 93       	push	r25
	if(TCCR1B & 0x40){
  bc:	0e b4       	in	r0, 0x2e	; 46
  be:	06 fe       	sbrs	r0, 6
  c0:	0b c0       	rjmp	.+22     	; 0xd8 <__vector_11+0x2a>
		// 상승엣지 인경우
		pastICR = ICR1;
  c2:	86 b5       	in	r24, 0x26	; 38
  c4:	97 b5       	in	r25, 0x27	; 39
  c6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <pastICR+0x1>
  ca:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <pastICR>
		TCCR1B = 0x01;
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	8e bd       	out	0x2e, r24	; 46
		// 하강엣지 Clear
		captFlag = 1;
  d2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <captFlag>
  d6:	0d c0       	rjmp	.+26     	; 0xf2 <__vector_11+0x44>
	}
	else{
		// 하강엣지 인경우
		// 시작 pastICR이 기록되었을때 작동되면 현재를 기록
		if(captFlag == 1){
  d8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <captFlag>
  dc:	81 30       	cpi	r24, 0x01	; 1
  de:	49 f4       	brne	.+18     	; 0xf2 <__vector_11+0x44>
			currentICR = ICR1;
  e0:	86 b5       	in	r24, 0x26	; 38
  e2:	97 b5       	in	r25, 0x27	; 39
  e4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  e8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			captFlag = 2;
  ec:	82 e0       	ldi	r24, 0x02	; 2
  ee:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <captFlag>
		}
	}
}
  f2:	9f 91       	pop	r25
  f4:	8f 91       	pop	r24
  f6:	0f 90       	pop	r0
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	0f 90       	pop	r0
  fc:	1f 90       	pop	r1
  fe:	18 95       	reti

00000100 <UART0_Putch>:

void UART0_Putch(unsigned char data) // 송신
{
	while(!(UCSR0A & 0x20));
 100:	5d 9b       	sbis	0x0b, 5	; 11
 102:	fe cf       	rjmp	.-4      	; 0x100 <UART0_Putch>
	UDR0 = data;
 104:	8c b9       	out	0x0c, r24	; 12
 106:	08 95       	ret

00000108 <main>:
unsigned int pastICR = 0;
unsigned int currentICR = 0;

int main(void)
{
    TCCR1A = 0x00;
 108:	1f bc       	out	0x2f, r1	; 47
    // COM1A1 COM1A0 COM1B1 COM1B0 COM1C1 COM1C0 WGM11 WGM10
    // nomal 모드
    
    TCCR1B = 0x01;
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	8e bd       	out	0x2e, r24	; 46
    // ICNC1 ICES1 WGM13 WGM12 CS12 CS11 CS10
    // ICES3: Input Capture Edge Select
    // 0 이면 하강엣지, 1이면 상승엣지
    // 분주율 1
    
    TCCR1C = 0x00;
 10e:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    // FOC1A FOC1B FOC1C
    // OC1 출력 X
    // Input으로 받아 Input Cature형태로 진행해야 하니까
    TIMSK = 0x21;
 112:	81 e2       	ldi	r24, 0x21	; 33
 114:	87 bf       	out	0x37, r24	; 55
    TCNT1 = 100;
 116:	84 e6       	ldi	r24, 0x64	; 100
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	9d bd       	out	0x2d, r25	; 45
 11c:	8c bd       	out	0x2c, r24	; 44
    // TOP설정
    
    DDRD |= 0x08;
 11e:	8b 9a       	sbi	0x11, 3	; 17
    // PD4가 ICP1 이므로 echo의 값을 받으니 Input 설정
    // PD3은 Trigger 역할을 할것이므로 Output 설정
    
    UCSR0A = 0x0;
 120:	1b b8       	out	0x0b, r1	; 11
    UCSR0B = 0x98; // RXCIE1 = 1,수신완료 인터럽트 인에이블 , 송수신 인에이블= 1
 122:	88 e9       	ldi	r24, 0x98	; 152
 124:	8a b9       	out	0x0a, r24	; 10
    UCSR0C = 0x06; // 비동 기, 데이터 8비트 모드
 126:	86 e0       	ldi	r24, 0x06	; 6
 128:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
    UBRR0H = 0;
 12c:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    UBRR0L = 103; //16MHz , BAUD 9600
 130:	87 e6       	ldi	r24, 0x67	; 103
 132:	89 b9       	out	0x09, r24	; 9
    
	sei();
 134:	78 94       	sei
			UART0_Putch(valuemm);
			UART0_Putch(image);
			_delay_ms(100);
			TCNT1 = 0;
			// TC
			TCCR1B = 0x41;
 136:	c1 e4       	ldi	r28, 0x41	; 65
			
			if((valuecm & 0xFF) > 30.0){
				image = 0;
			}
			else if((valuecm & 0xFF) > 20.0){
				image = 1;
 138:	11 e0       	ldi	r17, 0x01	; 1
			}
			else if((valuecm & 0xFF) > 10.0){
				image = 2;
 13a:	68 94       	set
 13c:	33 24       	eor	r3, r3
 13e:	31 f8       	bld	r3, 1
			}
			else{
				image = 3;
 140:	03 e0       	ldi	r16, 0x03	; 3
		if(captFlag == 0){			
			TCCR1B = 0x41;
			// Input Capture 상승엣지 Set
			PORTD = 0x00;
			_delay_us(1);
			PORTD = 0x08;
 142:	d8 e0       	ldi	r29, 0x08	; 8
    
	sei();
	
    while (1) 
    {
		if(captFlag == 0){			
 144:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <captFlag>
 148:	81 11       	cpse	r24, r1
 14a:	0c c0       	rjmp	.+24     	; 0x164 <main+0x5c>
			TCCR1B = 0x41;
 14c:	ce bd       	out	0x2e, r28	; 46
			// Input Capture 상승엣지 Set
			PORTD = 0x00;
 14e:	12 ba       	out	0x12, r1	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 150:	00 00       	nop
			_delay_us(1);
			PORTD = 0x08;
 152:	d2 bb       	out	0x12, r29	; 18
 154:	23 e0       	ldi	r18, 0x03	; 3
 156:	2a 95       	dec	r18
 158:	f1 f7       	brne	.-4      	; 0x156 <main+0x4e>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <main+0x54>
			// Trigger Activate			
			_delay_us(11);
			TCNT1 = 0;
 15c:	1d bc       	out	0x2d, r1	; 45
 15e:	1c bc       	out	0x2c, r1	; 44
			PORTD = 0x00;
 160:	12 ba       	out	0x12, r1	; 18
 162:	f0 cf       	rjmp	.-32     	; 0x144 <main+0x3c>
			
		}
		else if(captFlag == 1){
 164:	81 30       	cpi	r24, 0x01	; 1
 166:	71 f4       	brne	.+28     	; 0x184 <main+0x7c>
			if(ICR1 > 65000){
 168:	86 b5       	in	r24, 0x26	; 38
 16a:	97 b5       	in	r25, 0x27	; 39
 16c:	89 3e       	cpi	r24, 0xE9	; 233
 16e:	9d 4f       	sbci	r25, 0xFD	; 253
 170:	48 f3       	brcs	.-46     	; 0x144 <main+0x3c>
				captFlag == 2;
				pastICR = 0;
 172:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <pastICR+0x1>
 176:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <pastICR>
				currentICR = 0;				
 17a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 17e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 182:	e0 cf       	rjmp	.-64     	; 0x144 <main+0x3c>
			}
		}
		else if(captFlag == 2){
 184:	82 30       	cpi	r24, 0x02	; 2
 186:	f1 f6       	brne	.-68     	; 0x144 <main+0x3c>
			double disGet = (double)(currentICR - pastICR);			
 188:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 18c:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 190:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <pastICR>
 194:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <pastICR+0x1>
 198:	68 1b       	sub	r22, r24
 19a:	79 0b       	sbc	r23, r25
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	58 d1       	rcall	.+688    	; 0x452 <__floatunsisf>
						
			disGet = disGet /9.4;
 1a2:	26 e6       	ldi	r18, 0x66	; 102
 1a4:	36 e6       	ldi	r19, 0x66	; 102
 1a6:	46 e1       	ldi	r20, 0x16	; 22
 1a8:	51 e4       	ldi	r21, 0x41	; 65
 1aa:	bf d0       	rcall	.+382    	; 0x32a <__divsf3>
 1ac:	2b 01       	movw	r4, r22
			
			unsigned int valuecm = (unsigned int)disGet;
 1ae:	3c 01       	movw	r6, r24
 1b0:	24 d1       	rcall	.+584    	; 0x3fa <__fixunssfsi>
 1b2:	6b 01       	movw	r12, r22
			unsigned int valuemm = (unsigned int)((disGet - valuecm) * 10);
 1b4:	7c 01       	movw	r14, r24
 1b6:	80 e0       	ldi	r24, 0x00	; 0
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	4b d1       	rcall	.+662    	; 0x452 <__floatunsisf>
 1bc:	9b 01       	movw	r18, r22
 1be:	ac 01       	movw	r20, r24
 1c0:	c3 01       	movw	r24, r6
 1c2:	b2 01       	movw	r22, r4
 1c4:	4d d0       	rcall	.+154    	; 0x260 <__subsf3>
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	40 e2       	ldi	r20, 0x20	; 32
 1cc:	51 e4       	ldi	r21, 0x41	; 65
 1ce:	d3 d1       	rcall	.+934    	; 0x576 <__mulsf3>
 1d0:	14 d1       	rcall	.+552    	; 0x3fa <__fixunssfsi>
 1d2:	2b 01       	movw	r4, r22
 1d4:	3c 01       	movw	r6, r24
			
			unsigned char image = 0;
			
			if((valuecm & 0xFF) > 30.0){
 1d6:	dd 24       	eor	r13, r13
 1d8:	b6 01       	movw	r22, r12
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	39 d1       	rcall	.+626    	; 0x452 <__floatunsisf>
 1e0:	4b 01       	movw	r8, r22
 1e2:	5c 01       	movw	r10, r24
 1e4:	20 e0       	ldi	r18, 0x00	; 0
 1e6:	30 e0       	ldi	r19, 0x00	; 0
 1e8:	40 ef       	ldi	r20, 0xF0	; 240
 1ea:	51 e4       	ldi	r21, 0x41	; 65
 1ec:	c0 d1       	rcall	.+896    	; 0x56e <__gesf2>
 1ee:	18 16       	cp	r1, r24
 1f0:	a4 f0       	brlt	.+40     	; 0x21a <main+0x112>
				image = 0;
			}
			else if((valuecm & 0xFF) > 20.0){
 1f2:	20 e0       	ldi	r18, 0x00	; 0
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	40 ea       	ldi	r20, 0xA0	; 160
 1f8:	51 e4       	ldi	r21, 0x41	; 65
 1fa:	c5 01       	movw	r24, r10
 1fc:	b4 01       	movw	r22, r8
 1fe:	b7 d1       	rcall	.+878    	; 0x56e <__gesf2>
 200:	18 16       	cp	r1, r24
 202:	6c f0       	brlt	.+26     	; 0x21e <main+0x116>
				image = 1;
			}
			else if((valuecm & 0xFF) > 10.0){
 204:	20 e0       	ldi	r18, 0x00	; 0
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	40 e2       	ldi	r20, 0x20	; 32
 20a:	51 e4       	ldi	r21, 0x41	; 65
 20c:	c5 01       	movw	r24, r10
 20e:	b4 01       	movw	r22, r8
 210:	ae d1       	rcall	.+860    	; 0x56e <__gesf2>
 212:	18 16       	cp	r1, r24
 214:	34 f0       	brlt	.+12     	; 0x222 <main+0x11a>
				image = 2;
			}
			else{
				image = 3;
 216:	f0 2e       	mov	r15, r16
			unsigned int valuemm = (unsigned int)((disGet - valuecm) * 10);
			
			unsigned char image = 0;
			
			if((valuecm & 0xFF) > 30.0){
				image = 0;
 218:	05 c0       	rjmp	.+10     	; 0x224 <main+0x11c>
			}
			else if((valuecm & 0xFF) > 20.0){
				image = 1;
 21a:	f1 2c       	mov	r15, r1
			}
			else if((valuecm & 0xFF) > 10.0){
				image = 2;
 21c:	03 c0       	rjmp	.+6      	; 0x224 <main+0x11c>
			}
			else{
				image = 3;
			}
			
			UART0_Putch(0xFF);
 21e:	f1 2e       	mov	r15, r17
 220:	01 c0       	rjmp	.+2      	; 0x224 <main+0x11c>
 222:	f3 2c       	mov	r15, r3
 224:	8f ef       	ldi	r24, 0xFF	; 255
			UART0_Putch(valuecm&0xFF);
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	6b df       	rcall	.-298    	; 0x100 <UART0_Putch>
 22a:	c6 01       	movw	r24, r12
			UART0_Putch(valuemm);
 22c:	69 df       	rcall	.-302    	; 0x100 <UART0_Putch>
 22e:	c2 01       	movw	r24, r4
 230:	67 df       	rcall	.-306    	; 0x100 <UART0_Putch>
			UART0_Putch(image);
 232:	8f 2d       	mov	r24, r15
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	64 df       	rcall	.-312    	; 0x100 <UART0_Putch>
 238:	87 ea       	ldi	r24, 0xA7	; 167
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 23a:	91 e6       	ldi	r25, 0x61	; 97
 23c:	01 97       	sbiw	r24, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <main+0x134>
 240:	00 c0       	rjmp	.+0      	; 0x242 <main+0x13a>
 242:	00 00       	nop
 244:	1d bc       	out	0x2d, r1	; 45
			_delay_ms(100);
			TCNT1 = 0;
 246:	1c bc       	out	0x2c, r1	; 44
 248:	ce bd       	out	0x2e, r28	; 46
			// TC
			TCCR1B = 0x41;
 24a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <captFlag>
			// 기록하였으니 다시 상승엣지 Set
			captFlag = 0;
 24e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
			currentICR = 0;
 252:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 256:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <pastICR+0x1>
			pastICR = 0;
 25a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <pastICR>
 25e:	72 cf       	rjmp	.-284    	; 0x144 <main+0x3c>

00000260 <__subsf3>:
 260:	50 58       	subi	r21, 0x80	; 128

00000262 <__addsf3>:
 262:	bb 27       	eor	r27, r27
 264:	aa 27       	eor	r26, r26
 266:	0e d0       	rcall	.+28     	; 0x284 <__addsf3x>
 268:	48 c1       	rjmp	.+656    	; 0x4fa <__fp_round>
 26a:	39 d1       	rcall	.+626    	; 0x4de <__fp_pscA>
 26c:	30 f0       	brcs	.+12     	; 0x27a <__addsf3+0x18>
 26e:	3e d1       	rcall	.+636    	; 0x4ec <__fp_pscB>
 270:	20 f0       	brcs	.+8      	; 0x27a <__addsf3+0x18>
 272:	31 f4       	brne	.+12     	; 0x280 <__addsf3+0x1e>
 274:	9f 3f       	cpi	r25, 0xFF	; 255
 276:	11 f4       	brne	.+4      	; 0x27c <__addsf3+0x1a>
 278:	1e f4       	brtc	.+6      	; 0x280 <__addsf3+0x1e>
 27a:	2e c1       	rjmp	.+604    	; 0x4d8 <__fp_nan>
 27c:	0e f4       	brtc	.+2      	; 0x280 <__addsf3+0x1e>
 27e:	e0 95       	com	r30
 280:	e7 fb       	bst	r30, 7
 282:	24 c1       	rjmp	.+584    	; 0x4cc <__fp_inf>

00000284 <__addsf3x>:
 284:	e9 2f       	mov	r30, r25
 286:	4a d1       	rcall	.+660    	; 0x51c <__fp_split3>
 288:	80 f3       	brcs	.-32     	; 0x26a <__addsf3+0x8>
 28a:	ba 17       	cp	r27, r26
 28c:	62 07       	cpc	r22, r18
 28e:	73 07       	cpc	r23, r19
 290:	84 07       	cpc	r24, r20
 292:	95 07       	cpc	r25, r21
 294:	18 f0       	brcs	.+6      	; 0x29c <__addsf3x+0x18>
 296:	71 f4       	brne	.+28     	; 0x2b4 <__addsf3x+0x30>
 298:	9e f5       	brtc	.+102    	; 0x300 <__addsf3x+0x7c>
 29a:	62 c1       	rjmp	.+708    	; 0x560 <__fp_zero>
 29c:	0e f4       	brtc	.+2      	; 0x2a0 <__addsf3x+0x1c>
 29e:	e0 95       	com	r30
 2a0:	0b 2e       	mov	r0, r27
 2a2:	ba 2f       	mov	r27, r26
 2a4:	a0 2d       	mov	r26, r0
 2a6:	0b 01       	movw	r0, r22
 2a8:	b9 01       	movw	r22, r18
 2aa:	90 01       	movw	r18, r0
 2ac:	0c 01       	movw	r0, r24
 2ae:	ca 01       	movw	r24, r20
 2b0:	a0 01       	movw	r20, r0
 2b2:	11 24       	eor	r1, r1
 2b4:	ff 27       	eor	r31, r31
 2b6:	59 1b       	sub	r21, r25
 2b8:	99 f0       	breq	.+38     	; 0x2e0 <__addsf3x+0x5c>
 2ba:	59 3f       	cpi	r21, 0xF9	; 249
 2bc:	50 f4       	brcc	.+20     	; 0x2d2 <__addsf3x+0x4e>
 2be:	50 3e       	cpi	r21, 0xE0	; 224
 2c0:	68 f1       	brcs	.+90     	; 0x31c <__addsf3x+0x98>
 2c2:	1a 16       	cp	r1, r26
 2c4:	f0 40       	sbci	r31, 0x00	; 0
 2c6:	a2 2f       	mov	r26, r18
 2c8:	23 2f       	mov	r18, r19
 2ca:	34 2f       	mov	r19, r20
 2cc:	44 27       	eor	r20, r20
 2ce:	58 5f       	subi	r21, 0xF8	; 248
 2d0:	f3 cf       	rjmp	.-26     	; 0x2b8 <__addsf3x+0x34>
 2d2:	46 95       	lsr	r20
 2d4:	37 95       	ror	r19
 2d6:	27 95       	ror	r18
 2d8:	a7 95       	ror	r26
 2da:	f0 40       	sbci	r31, 0x00	; 0
 2dc:	53 95       	inc	r21
 2de:	c9 f7       	brne	.-14     	; 0x2d2 <__addsf3x+0x4e>
 2e0:	7e f4       	brtc	.+30     	; 0x300 <__addsf3x+0x7c>
 2e2:	1f 16       	cp	r1, r31
 2e4:	ba 0b       	sbc	r27, r26
 2e6:	62 0b       	sbc	r22, r18
 2e8:	73 0b       	sbc	r23, r19
 2ea:	84 0b       	sbc	r24, r20
 2ec:	ba f0       	brmi	.+46     	; 0x31c <__addsf3x+0x98>
 2ee:	91 50       	subi	r25, 0x01	; 1
 2f0:	a1 f0       	breq	.+40     	; 0x31a <__addsf3x+0x96>
 2f2:	ff 0f       	add	r31, r31
 2f4:	bb 1f       	adc	r27, r27
 2f6:	66 1f       	adc	r22, r22
 2f8:	77 1f       	adc	r23, r23
 2fa:	88 1f       	adc	r24, r24
 2fc:	c2 f7       	brpl	.-16     	; 0x2ee <__addsf3x+0x6a>
 2fe:	0e c0       	rjmp	.+28     	; 0x31c <__addsf3x+0x98>
 300:	ba 0f       	add	r27, r26
 302:	62 1f       	adc	r22, r18
 304:	73 1f       	adc	r23, r19
 306:	84 1f       	adc	r24, r20
 308:	48 f4       	brcc	.+18     	; 0x31c <__addsf3x+0x98>
 30a:	87 95       	ror	r24
 30c:	77 95       	ror	r23
 30e:	67 95       	ror	r22
 310:	b7 95       	ror	r27
 312:	f7 95       	ror	r31
 314:	9e 3f       	cpi	r25, 0xFE	; 254
 316:	08 f0       	brcs	.+2      	; 0x31a <__addsf3x+0x96>
 318:	b3 cf       	rjmp	.-154    	; 0x280 <__addsf3+0x1e>
 31a:	93 95       	inc	r25
 31c:	88 0f       	add	r24, r24
 31e:	08 f0       	brcs	.+2      	; 0x322 <__addsf3x+0x9e>
 320:	99 27       	eor	r25, r25
 322:	ee 0f       	add	r30, r30
 324:	97 95       	ror	r25
 326:	87 95       	ror	r24
 328:	08 95       	ret

0000032a <__divsf3>:
 32a:	0c d0       	rcall	.+24     	; 0x344 <__divsf3x>
 32c:	e6 c0       	rjmp	.+460    	; 0x4fa <__fp_round>
 32e:	de d0       	rcall	.+444    	; 0x4ec <__fp_pscB>
 330:	40 f0       	brcs	.+16     	; 0x342 <__divsf3+0x18>
 332:	d5 d0       	rcall	.+426    	; 0x4de <__fp_pscA>
 334:	30 f0       	brcs	.+12     	; 0x342 <__divsf3+0x18>
 336:	21 f4       	brne	.+8      	; 0x340 <__divsf3+0x16>
 338:	5f 3f       	cpi	r21, 0xFF	; 255
 33a:	19 f0       	breq	.+6      	; 0x342 <__divsf3+0x18>
 33c:	c7 c0       	rjmp	.+398    	; 0x4cc <__fp_inf>
 33e:	51 11       	cpse	r21, r1
 340:	10 c1       	rjmp	.+544    	; 0x562 <__fp_szero>
 342:	ca c0       	rjmp	.+404    	; 0x4d8 <__fp_nan>

00000344 <__divsf3x>:
 344:	eb d0       	rcall	.+470    	; 0x51c <__fp_split3>
 346:	98 f3       	brcs	.-26     	; 0x32e <__divsf3+0x4>

00000348 <__divsf3_pse>:
 348:	99 23       	and	r25, r25
 34a:	c9 f3       	breq	.-14     	; 0x33e <__divsf3+0x14>
 34c:	55 23       	and	r21, r21
 34e:	b1 f3       	breq	.-20     	; 0x33c <__divsf3+0x12>
 350:	95 1b       	sub	r25, r21
 352:	55 0b       	sbc	r21, r21
 354:	bb 27       	eor	r27, r27
 356:	aa 27       	eor	r26, r26
 358:	62 17       	cp	r22, r18
 35a:	73 07       	cpc	r23, r19
 35c:	84 07       	cpc	r24, r20
 35e:	38 f0       	brcs	.+14     	; 0x36e <__divsf3_pse+0x26>
 360:	9f 5f       	subi	r25, 0xFF	; 255
 362:	5f 4f       	sbci	r21, 0xFF	; 255
 364:	22 0f       	add	r18, r18
 366:	33 1f       	adc	r19, r19
 368:	44 1f       	adc	r20, r20
 36a:	aa 1f       	adc	r26, r26
 36c:	a9 f3       	breq	.-22     	; 0x358 <__divsf3_pse+0x10>
 36e:	33 d0       	rcall	.+102    	; 0x3d6 <__divsf3_pse+0x8e>
 370:	0e 2e       	mov	r0, r30
 372:	3a f0       	brmi	.+14     	; 0x382 <__divsf3_pse+0x3a>
 374:	e0 e8       	ldi	r30, 0x80	; 128
 376:	30 d0       	rcall	.+96     	; 0x3d8 <__divsf3_pse+0x90>
 378:	91 50       	subi	r25, 0x01	; 1
 37a:	50 40       	sbci	r21, 0x00	; 0
 37c:	e6 95       	lsr	r30
 37e:	00 1c       	adc	r0, r0
 380:	ca f7       	brpl	.-14     	; 0x374 <__divsf3_pse+0x2c>
 382:	29 d0       	rcall	.+82     	; 0x3d6 <__divsf3_pse+0x8e>
 384:	fe 2f       	mov	r31, r30
 386:	27 d0       	rcall	.+78     	; 0x3d6 <__divsf3_pse+0x8e>
 388:	66 0f       	add	r22, r22
 38a:	77 1f       	adc	r23, r23
 38c:	88 1f       	adc	r24, r24
 38e:	bb 1f       	adc	r27, r27
 390:	26 17       	cp	r18, r22
 392:	37 07       	cpc	r19, r23
 394:	48 07       	cpc	r20, r24
 396:	ab 07       	cpc	r26, r27
 398:	b0 e8       	ldi	r27, 0x80	; 128
 39a:	09 f0       	breq	.+2      	; 0x39e <__divsf3_pse+0x56>
 39c:	bb 0b       	sbc	r27, r27
 39e:	80 2d       	mov	r24, r0
 3a0:	bf 01       	movw	r22, r30
 3a2:	ff 27       	eor	r31, r31
 3a4:	93 58       	subi	r25, 0x83	; 131
 3a6:	5f 4f       	sbci	r21, 0xFF	; 255
 3a8:	2a f0       	brmi	.+10     	; 0x3b4 <__divsf3_pse+0x6c>
 3aa:	9e 3f       	cpi	r25, 0xFE	; 254
 3ac:	51 05       	cpc	r21, r1
 3ae:	68 f0       	brcs	.+26     	; 0x3ca <__divsf3_pse+0x82>
 3b0:	8d c0       	rjmp	.+282    	; 0x4cc <__fp_inf>
 3b2:	d7 c0       	rjmp	.+430    	; 0x562 <__fp_szero>
 3b4:	5f 3f       	cpi	r21, 0xFF	; 255
 3b6:	ec f3       	brlt	.-6      	; 0x3b2 <__divsf3_pse+0x6a>
 3b8:	98 3e       	cpi	r25, 0xE8	; 232
 3ba:	dc f3       	brlt	.-10     	; 0x3b2 <__divsf3_pse+0x6a>
 3bc:	86 95       	lsr	r24
 3be:	77 95       	ror	r23
 3c0:	67 95       	ror	r22
 3c2:	b7 95       	ror	r27
 3c4:	f7 95       	ror	r31
 3c6:	9f 5f       	subi	r25, 0xFF	; 255
 3c8:	c9 f7       	brne	.-14     	; 0x3bc <__divsf3_pse+0x74>
 3ca:	88 0f       	add	r24, r24
 3cc:	91 1d       	adc	r25, r1
 3ce:	96 95       	lsr	r25
 3d0:	87 95       	ror	r24
 3d2:	97 f9       	bld	r25, 7
 3d4:	08 95       	ret
 3d6:	e1 e0       	ldi	r30, 0x01	; 1
 3d8:	66 0f       	add	r22, r22
 3da:	77 1f       	adc	r23, r23
 3dc:	88 1f       	adc	r24, r24
 3de:	bb 1f       	adc	r27, r27
 3e0:	62 17       	cp	r22, r18
 3e2:	73 07       	cpc	r23, r19
 3e4:	84 07       	cpc	r24, r20
 3e6:	ba 07       	cpc	r27, r26
 3e8:	20 f0       	brcs	.+8      	; 0x3f2 <__divsf3_pse+0xaa>
 3ea:	62 1b       	sub	r22, r18
 3ec:	73 0b       	sbc	r23, r19
 3ee:	84 0b       	sbc	r24, r20
 3f0:	ba 0b       	sbc	r27, r26
 3f2:	ee 1f       	adc	r30, r30
 3f4:	88 f7       	brcc	.-30     	; 0x3d8 <__divsf3_pse+0x90>
 3f6:	e0 95       	com	r30
 3f8:	08 95       	ret

000003fa <__fixunssfsi>:
 3fa:	98 d0       	rcall	.+304    	; 0x52c <__fp_splitA>
 3fc:	88 f0       	brcs	.+34     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3fe:	9f 57       	subi	r25, 0x7F	; 127
 400:	90 f0       	brcs	.+36     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 402:	b9 2f       	mov	r27, r25
 404:	99 27       	eor	r25, r25
 406:	b7 51       	subi	r27, 0x17	; 23
 408:	a0 f0       	brcs	.+40     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 40a:	d1 f0       	breq	.+52     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 40c:	66 0f       	add	r22, r22
 40e:	77 1f       	adc	r23, r23
 410:	88 1f       	adc	r24, r24
 412:	99 1f       	adc	r25, r25
 414:	1a f0       	brmi	.+6      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 416:	ba 95       	dec	r27
 418:	c9 f7       	brne	.-14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 41a:	12 c0       	rjmp	.+36     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 41c:	b1 30       	cpi	r27, 0x01	; 1
 41e:	81 f0       	breq	.+32     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 420:	9f d0       	rcall	.+318    	; 0x560 <__fp_zero>
 422:	b1 e0       	ldi	r27, 0x01	; 1
 424:	08 95       	ret
 426:	9c c0       	rjmp	.+312    	; 0x560 <__fp_zero>
 428:	67 2f       	mov	r22, r23
 42a:	78 2f       	mov	r23, r24
 42c:	88 27       	eor	r24, r24
 42e:	b8 5f       	subi	r27, 0xF8	; 248
 430:	39 f0       	breq	.+14     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 432:	b9 3f       	cpi	r27, 0xF9	; 249
 434:	cc f3       	brlt	.-14     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 436:	86 95       	lsr	r24
 438:	77 95       	ror	r23
 43a:	67 95       	ror	r22
 43c:	b3 95       	inc	r27
 43e:	d9 f7       	brne	.-10     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 440:	3e f4       	brtc	.+14     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 442:	90 95       	com	r25
 444:	80 95       	com	r24
 446:	70 95       	com	r23
 448:	61 95       	neg	r22
 44a:	7f 4f       	sbci	r23, 0xFF	; 255
 44c:	8f 4f       	sbci	r24, 0xFF	; 255
 44e:	9f 4f       	sbci	r25, 0xFF	; 255
 450:	08 95       	ret

00000452 <__floatunsisf>:
 452:	e8 94       	clt
 454:	09 c0       	rjmp	.+18     	; 0x468 <__floatsisf+0x12>

00000456 <__floatsisf>:
 456:	97 fb       	bst	r25, 7
 458:	3e f4       	brtc	.+14     	; 0x468 <__floatsisf+0x12>
 45a:	90 95       	com	r25
 45c:	80 95       	com	r24
 45e:	70 95       	com	r23
 460:	61 95       	neg	r22
 462:	7f 4f       	sbci	r23, 0xFF	; 255
 464:	8f 4f       	sbci	r24, 0xFF	; 255
 466:	9f 4f       	sbci	r25, 0xFF	; 255
 468:	99 23       	and	r25, r25
 46a:	a9 f0       	breq	.+42     	; 0x496 <__floatsisf+0x40>
 46c:	f9 2f       	mov	r31, r25
 46e:	96 e9       	ldi	r25, 0x96	; 150
 470:	bb 27       	eor	r27, r27
 472:	93 95       	inc	r25
 474:	f6 95       	lsr	r31
 476:	87 95       	ror	r24
 478:	77 95       	ror	r23
 47a:	67 95       	ror	r22
 47c:	b7 95       	ror	r27
 47e:	f1 11       	cpse	r31, r1
 480:	f8 cf       	rjmp	.-16     	; 0x472 <__floatsisf+0x1c>
 482:	fa f4       	brpl	.+62     	; 0x4c2 <__floatsisf+0x6c>
 484:	bb 0f       	add	r27, r27
 486:	11 f4       	brne	.+4      	; 0x48c <__floatsisf+0x36>
 488:	60 ff       	sbrs	r22, 0
 48a:	1b c0       	rjmp	.+54     	; 0x4c2 <__floatsisf+0x6c>
 48c:	6f 5f       	subi	r22, 0xFF	; 255
 48e:	7f 4f       	sbci	r23, 0xFF	; 255
 490:	8f 4f       	sbci	r24, 0xFF	; 255
 492:	9f 4f       	sbci	r25, 0xFF	; 255
 494:	16 c0       	rjmp	.+44     	; 0x4c2 <__floatsisf+0x6c>
 496:	88 23       	and	r24, r24
 498:	11 f0       	breq	.+4      	; 0x49e <__floatsisf+0x48>
 49a:	96 e9       	ldi	r25, 0x96	; 150
 49c:	11 c0       	rjmp	.+34     	; 0x4c0 <__floatsisf+0x6a>
 49e:	77 23       	and	r23, r23
 4a0:	21 f0       	breq	.+8      	; 0x4aa <__floatsisf+0x54>
 4a2:	9e e8       	ldi	r25, 0x8E	; 142
 4a4:	87 2f       	mov	r24, r23
 4a6:	76 2f       	mov	r23, r22
 4a8:	05 c0       	rjmp	.+10     	; 0x4b4 <__floatsisf+0x5e>
 4aa:	66 23       	and	r22, r22
 4ac:	71 f0       	breq	.+28     	; 0x4ca <__floatsisf+0x74>
 4ae:	96 e8       	ldi	r25, 0x86	; 134
 4b0:	86 2f       	mov	r24, r22
 4b2:	70 e0       	ldi	r23, 0x00	; 0
 4b4:	60 e0       	ldi	r22, 0x00	; 0
 4b6:	2a f0       	brmi	.+10     	; 0x4c2 <__floatsisf+0x6c>
 4b8:	9a 95       	dec	r25
 4ba:	66 0f       	add	r22, r22
 4bc:	77 1f       	adc	r23, r23
 4be:	88 1f       	adc	r24, r24
 4c0:	da f7       	brpl	.-10     	; 0x4b8 <__floatsisf+0x62>
 4c2:	88 0f       	add	r24, r24
 4c4:	96 95       	lsr	r25
 4c6:	87 95       	ror	r24
 4c8:	97 f9       	bld	r25, 7
 4ca:	08 95       	ret

000004cc <__fp_inf>:
 4cc:	97 f9       	bld	r25, 7
 4ce:	9f 67       	ori	r25, 0x7F	; 127
 4d0:	80 e8       	ldi	r24, 0x80	; 128
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	60 e0       	ldi	r22, 0x00	; 0
 4d6:	08 95       	ret

000004d8 <__fp_nan>:
 4d8:	9f ef       	ldi	r25, 0xFF	; 255
 4da:	80 ec       	ldi	r24, 0xC0	; 192
 4dc:	08 95       	ret

000004de <__fp_pscA>:
 4de:	00 24       	eor	r0, r0
 4e0:	0a 94       	dec	r0
 4e2:	16 16       	cp	r1, r22
 4e4:	17 06       	cpc	r1, r23
 4e6:	18 06       	cpc	r1, r24
 4e8:	09 06       	cpc	r0, r25
 4ea:	08 95       	ret

000004ec <__fp_pscB>:
 4ec:	00 24       	eor	r0, r0
 4ee:	0a 94       	dec	r0
 4f0:	12 16       	cp	r1, r18
 4f2:	13 06       	cpc	r1, r19
 4f4:	14 06       	cpc	r1, r20
 4f6:	05 06       	cpc	r0, r21
 4f8:	08 95       	ret

000004fa <__fp_round>:
 4fa:	09 2e       	mov	r0, r25
 4fc:	03 94       	inc	r0
 4fe:	00 0c       	add	r0, r0
 500:	11 f4       	brne	.+4      	; 0x506 <__fp_round+0xc>
 502:	88 23       	and	r24, r24
 504:	52 f0       	brmi	.+20     	; 0x51a <__fp_round+0x20>
 506:	bb 0f       	add	r27, r27
 508:	40 f4       	brcc	.+16     	; 0x51a <__fp_round+0x20>
 50a:	bf 2b       	or	r27, r31
 50c:	11 f4       	brne	.+4      	; 0x512 <__fp_round+0x18>
 50e:	60 ff       	sbrs	r22, 0
 510:	04 c0       	rjmp	.+8      	; 0x51a <__fp_round+0x20>
 512:	6f 5f       	subi	r22, 0xFF	; 255
 514:	7f 4f       	sbci	r23, 0xFF	; 255
 516:	8f 4f       	sbci	r24, 0xFF	; 255
 518:	9f 4f       	sbci	r25, 0xFF	; 255
 51a:	08 95       	ret

0000051c <__fp_split3>:
 51c:	57 fd       	sbrc	r21, 7
 51e:	90 58       	subi	r25, 0x80	; 128
 520:	44 0f       	add	r20, r20
 522:	55 1f       	adc	r21, r21
 524:	59 f0       	breq	.+22     	; 0x53c <__fp_splitA+0x10>
 526:	5f 3f       	cpi	r21, 0xFF	; 255
 528:	71 f0       	breq	.+28     	; 0x546 <__fp_splitA+0x1a>
 52a:	47 95       	ror	r20

0000052c <__fp_splitA>:
 52c:	88 0f       	add	r24, r24
 52e:	97 fb       	bst	r25, 7
 530:	99 1f       	adc	r25, r25
 532:	61 f0       	breq	.+24     	; 0x54c <__fp_splitA+0x20>
 534:	9f 3f       	cpi	r25, 0xFF	; 255
 536:	79 f0       	breq	.+30     	; 0x556 <__fp_splitA+0x2a>
 538:	87 95       	ror	r24
 53a:	08 95       	ret
 53c:	12 16       	cp	r1, r18
 53e:	13 06       	cpc	r1, r19
 540:	14 06       	cpc	r1, r20
 542:	55 1f       	adc	r21, r21
 544:	f2 cf       	rjmp	.-28     	; 0x52a <__fp_split3+0xe>
 546:	46 95       	lsr	r20
 548:	f1 df       	rcall	.-30     	; 0x52c <__fp_splitA>
 54a:	08 c0       	rjmp	.+16     	; 0x55c <__fp_splitA+0x30>
 54c:	16 16       	cp	r1, r22
 54e:	17 06       	cpc	r1, r23
 550:	18 06       	cpc	r1, r24
 552:	99 1f       	adc	r25, r25
 554:	f1 cf       	rjmp	.-30     	; 0x538 <__fp_splitA+0xc>
 556:	86 95       	lsr	r24
 558:	71 05       	cpc	r23, r1
 55a:	61 05       	cpc	r22, r1
 55c:	08 94       	sec
 55e:	08 95       	ret

00000560 <__fp_zero>:
 560:	e8 94       	clt

00000562 <__fp_szero>:
 562:	bb 27       	eor	r27, r27
 564:	66 27       	eor	r22, r22
 566:	77 27       	eor	r23, r23
 568:	cb 01       	movw	r24, r22
 56a:	97 f9       	bld	r25, 7
 56c:	08 95       	ret

0000056e <__gesf2>:
 56e:	66 d0       	rcall	.+204    	; 0x63c <__fp_cmp>
 570:	08 f4       	brcc	.+2      	; 0x574 <__gesf2+0x6>
 572:	8f ef       	ldi	r24, 0xFF	; 255
 574:	08 95       	ret

00000576 <__mulsf3>:
 576:	0b d0       	rcall	.+22     	; 0x58e <__mulsf3x>
 578:	c0 cf       	rjmp	.-128    	; 0x4fa <__fp_round>
 57a:	b1 df       	rcall	.-158    	; 0x4de <__fp_pscA>
 57c:	28 f0       	brcs	.+10     	; 0x588 <__mulsf3+0x12>
 57e:	b6 df       	rcall	.-148    	; 0x4ec <__fp_pscB>
 580:	18 f0       	brcs	.+6      	; 0x588 <__mulsf3+0x12>
 582:	95 23       	and	r25, r21
 584:	09 f0       	breq	.+2      	; 0x588 <__mulsf3+0x12>
 586:	a2 cf       	rjmp	.-188    	; 0x4cc <__fp_inf>
 588:	a7 cf       	rjmp	.-178    	; 0x4d8 <__fp_nan>
 58a:	11 24       	eor	r1, r1
 58c:	ea cf       	rjmp	.-44     	; 0x562 <__fp_szero>

0000058e <__mulsf3x>:
 58e:	c6 df       	rcall	.-116    	; 0x51c <__fp_split3>
 590:	a0 f3       	brcs	.-24     	; 0x57a <__mulsf3+0x4>

00000592 <__mulsf3_pse>:
 592:	95 9f       	mul	r25, r21
 594:	d1 f3       	breq	.-12     	; 0x58a <__mulsf3+0x14>
 596:	95 0f       	add	r25, r21
 598:	50 e0       	ldi	r21, 0x00	; 0
 59a:	55 1f       	adc	r21, r21
 59c:	62 9f       	mul	r22, r18
 59e:	f0 01       	movw	r30, r0
 5a0:	72 9f       	mul	r23, r18
 5a2:	bb 27       	eor	r27, r27
 5a4:	f0 0d       	add	r31, r0
 5a6:	b1 1d       	adc	r27, r1
 5a8:	63 9f       	mul	r22, r19
 5aa:	aa 27       	eor	r26, r26
 5ac:	f0 0d       	add	r31, r0
 5ae:	b1 1d       	adc	r27, r1
 5b0:	aa 1f       	adc	r26, r26
 5b2:	64 9f       	mul	r22, r20
 5b4:	66 27       	eor	r22, r22
 5b6:	b0 0d       	add	r27, r0
 5b8:	a1 1d       	adc	r26, r1
 5ba:	66 1f       	adc	r22, r22
 5bc:	82 9f       	mul	r24, r18
 5be:	22 27       	eor	r18, r18
 5c0:	b0 0d       	add	r27, r0
 5c2:	a1 1d       	adc	r26, r1
 5c4:	62 1f       	adc	r22, r18
 5c6:	73 9f       	mul	r23, r19
 5c8:	b0 0d       	add	r27, r0
 5ca:	a1 1d       	adc	r26, r1
 5cc:	62 1f       	adc	r22, r18
 5ce:	83 9f       	mul	r24, r19
 5d0:	a0 0d       	add	r26, r0
 5d2:	61 1d       	adc	r22, r1
 5d4:	22 1f       	adc	r18, r18
 5d6:	74 9f       	mul	r23, r20
 5d8:	33 27       	eor	r19, r19
 5da:	a0 0d       	add	r26, r0
 5dc:	61 1d       	adc	r22, r1
 5de:	23 1f       	adc	r18, r19
 5e0:	84 9f       	mul	r24, r20
 5e2:	60 0d       	add	r22, r0
 5e4:	21 1d       	adc	r18, r1
 5e6:	82 2f       	mov	r24, r18
 5e8:	76 2f       	mov	r23, r22
 5ea:	6a 2f       	mov	r22, r26
 5ec:	11 24       	eor	r1, r1
 5ee:	9f 57       	subi	r25, 0x7F	; 127
 5f0:	50 40       	sbci	r21, 0x00	; 0
 5f2:	8a f0       	brmi	.+34     	; 0x616 <__mulsf3_pse+0x84>
 5f4:	e1 f0       	breq	.+56     	; 0x62e <__mulsf3_pse+0x9c>
 5f6:	88 23       	and	r24, r24
 5f8:	4a f0       	brmi	.+18     	; 0x60c <__mulsf3_pse+0x7a>
 5fa:	ee 0f       	add	r30, r30
 5fc:	ff 1f       	adc	r31, r31
 5fe:	bb 1f       	adc	r27, r27
 600:	66 1f       	adc	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	88 1f       	adc	r24, r24
 606:	91 50       	subi	r25, 0x01	; 1
 608:	50 40       	sbci	r21, 0x00	; 0
 60a:	a9 f7       	brne	.-22     	; 0x5f6 <__mulsf3_pse+0x64>
 60c:	9e 3f       	cpi	r25, 0xFE	; 254
 60e:	51 05       	cpc	r21, r1
 610:	70 f0       	brcs	.+28     	; 0x62e <__mulsf3_pse+0x9c>
 612:	5c cf       	rjmp	.-328    	; 0x4cc <__fp_inf>
 614:	a6 cf       	rjmp	.-180    	; 0x562 <__fp_szero>
 616:	5f 3f       	cpi	r21, 0xFF	; 255
 618:	ec f3       	brlt	.-6      	; 0x614 <__mulsf3_pse+0x82>
 61a:	98 3e       	cpi	r25, 0xE8	; 232
 61c:	dc f3       	brlt	.-10     	; 0x614 <__mulsf3_pse+0x82>
 61e:	86 95       	lsr	r24
 620:	77 95       	ror	r23
 622:	67 95       	ror	r22
 624:	b7 95       	ror	r27
 626:	f7 95       	ror	r31
 628:	e7 95       	ror	r30
 62a:	9f 5f       	subi	r25, 0xFF	; 255
 62c:	c1 f7       	brne	.-16     	; 0x61e <__mulsf3_pse+0x8c>
 62e:	fe 2b       	or	r31, r30
 630:	88 0f       	add	r24, r24
 632:	91 1d       	adc	r25, r1
 634:	96 95       	lsr	r25
 636:	87 95       	ror	r24
 638:	97 f9       	bld	r25, 7
 63a:	08 95       	ret

0000063c <__fp_cmp>:
 63c:	99 0f       	add	r25, r25
 63e:	00 08       	sbc	r0, r0
 640:	55 0f       	add	r21, r21
 642:	aa 0b       	sbc	r26, r26
 644:	e0 e8       	ldi	r30, 0x80	; 128
 646:	fe ef       	ldi	r31, 0xFE	; 254
 648:	16 16       	cp	r1, r22
 64a:	17 06       	cpc	r1, r23
 64c:	e8 07       	cpc	r30, r24
 64e:	f9 07       	cpc	r31, r25
 650:	c0 f0       	brcs	.+48     	; 0x682 <__fp_cmp+0x46>
 652:	12 16       	cp	r1, r18
 654:	13 06       	cpc	r1, r19
 656:	e4 07       	cpc	r30, r20
 658:	f5 07       	cpc	r31, r21
 65a:	98 f0       	brcs	.+38     	; 0x682 <__fp_cmp+0x46>
 65c:	62 1b       	sub	r22, r18
 65e:	73 0b       	sbc	r23, r19
 660:	84 0b       	sbc	r24, r20
 662:	95 0b       	sbc	r25, r21
 664:	39 f4       	brne	.+14     	; 0x674 <__fp_cmp+0x38>
 666:	0a 26       	eor	r0, r26
 668:	61 f0       	breq	.+24     	; 0x682 <__fp_cmp+0x46>
 66a:	23 2b       	or	r18, r19
 66c:	24 2b       	or	r18, r20
 66e:	25 2b       	or	r18, r21
 670:	21 f4       	brne	.+8      	; 0x67a <__fp_cmp+0x3e>
 672:	08 95       	ret
 674:	0a 26       	eor	r0, r26
 676:	09 f4       	brne	.+2      	; 0x67a <__fp_cmp+0x3e>
 678:	a1 40       	sbci	r26, 0x01	; 1
 67a:	a6 95       	lsr	r26
 67c:	8f ef       	ldi	r24, 0xFF	; 255
 67e:	81 1d       	adc	r24, r1
 680:	81 1d       	adc	r24, r1
 682:	08 95       	ret

00000684 <_exit>:
 684:	f8 94       	cli

00000686 <__stop_program>:
 686:	ff cf       	rjmp	.-2      	; 0x686 <__stop_program>
